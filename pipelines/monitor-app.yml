resources:
- name: web-repo
  type: git
  icon: github
  source:
    uri: https://github.com/mcguinnessa/test-web
    branch: main

- name: md-mongo-wrapper-repo
  type: git
  icon: github
  source:
    uri: https://github.com/mcguinnessa/md-mongo-wrapper
    branch: main

- name: web-image-docker
  type: registry-image
    #type: docker-image
  icon: docker
  source:
    #email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-hub-username))/node-web-app
    tag: latest

- name: md-momngo-wrapper-image-docker
  type: registry-image
    #type: docker-image
  icon: docker
  source:
    #email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-hub-username))/md-mongo-wrapper
    tag: latest

- name: node-image
  type: registry-image
  source:
    repository: node
    tag: 18

jobs:
- name: build-and-push-web
  public: true
  serial: true
  plan:
  - get: web-repo
    trigger: true

  - task: build-web-image
    #This allows it to do privileged things, like mount
    privileged: true
    config:
      platform: linux

      image_resource:
        type: registry-image
        source:
          repository: concourse/oci-build-task

      inputs:
      - name: web-repo
        path: .
      outputs:
      - name: image
        #      params:
        #CONTEXT: monitor-app-git-repo
      run:
        path: build

  - task: check-web-build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine

      inputs:
      - name: image
      run:
        path: /bin/sh
        args:
        - -c
        - | 
          ls -lrt 
          pwd
          cd image
          pwd
          ls -lrt

  - put: web-image-docker
    params: 
      image: image/image.tar








- name: test-wrapper
  public: true
  plan:
  - get: node-image
  - get: md-mongo-wrapper-repo
    trigger: true
  - task: install
    image: node-image
    config:
      inputs:
      - name: md-mongo-wrapper-repo
      outputs:
      - name: dependencies
        path: md-mongo-wrapper-repo/node_modules
      platform: linux
      run:
        path: npm
        args: ["install"]
        dir: md-mongo-wrapper-repo
  - task: test
    image: node-image
    config:
      inputs:
      - name: md-mongo-wrapper-repo
      - name: dependencies
        path: md-mongo-wrapper-repo/node_modules
      platform: linux
      run:
        path: npm
        args: ["SERVER_PORT=3000", "run", "test"]
        dir: md-mongo-wrapper-repo


        #- name: build-and-test-wrapper
        #  public: true
        #  serial: true
        #  plan:
        #  - get: md-mongo-wrapper-repo
        #    trigger: false
        #
        #  - task: mongo-wrapper-test
        #    config:
        #      platform: linux
        #      image_resource:
        #        type: docker-image
        #        source:
        #          repository: alpine
        #
        ##      inputs:
        ##      - name: image
        #      run:
        #        path: /bin/sh
        #        args:
        #        - -c
        #        - | 
        #          npm test

- name: build-and-push-mongo-wrapper
  public: true
  serial: true
  plan:
  - get: md-mongo-wrapper-repo
    trigger: true
    passed: [test-wrapper]

  - task: build-mongo-wrapper-image
    #This allows it to do privileged things, like mount
    privileged: true
    config:
      platform: linux

      image_resource:
        type: registry-image
        source:
          repository: concourse/oci-build-task

      inputs:
      - name: md-mongo-wrapper-repo
        path: .
      outputs:
      - name: image
        #      params:
        #CONTEXT: monitor-app-git-repo
      run:
        path: build

  - task: check-mongo-wrapper-build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine

      inputs:
      - name: image
      run:
        path: /bin/sh
        args:
        - -c
        - | 
          ls -lrt 
          pwd
          cd image
          pwd
          ls -lrt

  - put: md-momngo-wrapper-image-docker
    params: 
      image: image/image.tar

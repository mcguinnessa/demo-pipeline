resource_types:
- name: terraformtype
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: "1.4.6-11d9d59"

resources:
  - name: webfe-tf
    type: terraformtype
    check_every: never
    source:
      #env_name: staging
      backend_type: s3
      backend_config:
        bucket: adm-monitor-demo-s3bucket
        key: adm/webfe-terraform.tfstate
        region: eu-west-2
        access_key: ((aws_access_key))
        secret_key: ((aws_secret_key))
      vars:
        tag_name: concourse
      env:
        AWS_ACCESS_KEY_ID: ((aws_access_key))
        AWS_SECRET_ACCESS_KEY: ((aws_secret_key))

  - name: wrapper-tf
    type: terraformtype
    check_every: never
    source:
      #env_name: staging
      backend_type: s3
      backend_config:
        bucket: adm-monitor-demo-s3bucket
        key: adm/wrapper-terraform.tfstate
        region: eu-west-2
        access_key: ((aws_access_key))
        secret_key: ((aws_secret_key))
      vars:
        tag_name: concourse
      env:
        AWS_ACCESS_KEY_ID: ((aws_access_key))
        AWS_SECRET_ACCESS_KEY: ((aws_secret_key))

  - name: cpu-checker-tf
    type: terraformtype
    check_every : never
    source:
      #env_name: staging
      backend_type: s3
      backend_config:
        bucket: adm-monitor-demo-s3bucket
        key: adm/cpu-checker-terraform.tfstate
        region: eu-west-2
        access_key: ((aws_access_key))
        secret_key: ((aws_secret_key))
      vars:
        tag_name: concourse
      env:
        AWS_ACCESS_KEY_ID: ((aws_access_key))
        AWS_SECRET_ACCESS_KEY: ((aws_secret_key))

  - name: cputemp-checker-tf
    type: terraformtype
    check_every : never
    source:
      #env_name: staging
      backend_type: s3
      backend_config:
        bucket: adm-monitor-demo-s3bucket
        key: adm/cputemp-checker-terraform.tfstate
        region: eu-west-2
        access_key: ((aws_access_key))
        secret_key: ((aws_secret_key))
      vars:
        tag_name: concourse
      env:
        AWS_ACCESS_KEY_ID: ((aws_access_key))
        AWS_SECRET_ACCESS_KEY: ((aws_secret_key))

  - name: mem-checker-tf
    type: terraformtype
    check_every : never
    source:
      #env_name: staging
      backend_type: s3
      backend_config:
        bucket: adm-monitor-demo-s3bucket
        key: adm/mem-checker-terraform.tfstate
        region: eu-west-2
        access_key: ((aws_access_key))
        secret_key: ((aws_secret_key))
      vars:
        tag_name: concourse
      env:
        AWS_ACCESS_KEY_ID: ((aws_access_key))
        AWS_SECRET_ACCESS_KEY: ((aws_secret_key))

  - name: disk-checker-tf
    type: terraformtype
    check_every : never
    source:
      #env_name: staging
      backend_type: s3
      backend_config:
        bucket: adm-monitor-demo-s3bucket
        key: adm/disk-checker-terraform.tfstate
        region: eu-west-2
        access_key: ((aws_access_key))
        secret_key: ((aws_secret_key))
      vars:
        tag_name: concourse
      env:
        AWS_ACCESS_KEY_ID: ((aws_access_key))
        AWS_SECRET_ACCESS_KEY: ((aws_secret_key))

  - name: motraffic-checker-tf
    type: terraformtype
    check_every : never
    source:
      #env_name: staging
      backend_type: s3
      backend_config:
        bucket: adm-monitor-demo-s3bucket
        key: adm/motraffic-checker-terraform.tfstate
        region: eu-west-2
        access_key: ((aws_access_key))
        secret_key: ((aws_secret_key))
      vars:
        tag_name: concourse
      env:
        AWS_ACCESS_KEY_ID: ((aws_access_key))
        AWS_SECRET_ACCESS_KEY: ((aws_secret_key))

  - name: mttraffic-checker-tf
    type: terraformtype
    check_every : never
    source:
      #env_name: staging
      backend_type: s3
      backend_config:
        bucket: adm-monitor-demo-s3bucket
        key: adm/mttraffic-checker-terraform.tfstate
        region: eu-west-2
        access_key: ((aws_access_key))
        secret_key: ((aws_secret_key))
      vars:
        tag_name: concourse
      env:
        AWS_ACCESS_KEY_ID: ((aws_access_key))
        AWS_SECRET_ACCESS_KEY: ((aws_secret_key))

  - name: web-fe-repo
    type: git
    icon: github
    source:
      uri: https://github.com/mcguinnessa/demo-web-fe
      branch: main

  - name: md-mongo-wrapper-repo
    type: git
    icon: github
    source:
      uri: https://github.com/mcguinnessa/md-mongo-wrapper
      branch: main

  - name: cpu-checker-repo
    type: git
    icon: github
    source:
      uri: https://github.com/mcguinnessa/demo-cpu-checker
      branch: main

  - name: cputemp-checker-repo
    type: git
    icon: github
    source:
      uri: https://github.com/mcguinnessa/demo-cputemp-checker
      branch: main

  - name: mem-checker-repo
    type: git
    icon: github
    source:
      uri: https://github.com/mcguinnessa/demo-mem-checker
      branch: main

  - name: disk-checker-repo
    type: git
    icon: github
    source:
      uri: https://github.com/mcguinnessa/demo-disk-checker
      branch: main

  - name: motraffic-checker-repo
    type: git
    icon: github
    source:
      uri: https://github.com/mcguinnessa/demo-motraffic-checker
      branch: main

  - name: mttraffic-checker-repo
    type: git
    icon: github
    source:
      uri: https://github.com/mcguinnessa/demo-mttraffic-checker
      branch: main


jobs:
- name: webfe-tf-plan
  public: true
  serial: true
  plan:
  - get: web-fe-repo
  - task: check-source
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
      inputs:
      - name: web-fe-repo
      run:
        path: /bin/sh
        args:
        - -c
        - |
          ls -lrt
          pwd
          cd web-fe-repo/terraform
          pwd
          ls -lrt
          env

  - put: webfe-tf
    params:
      env_name: staging
      terraform_source: web-fe-repo/terraform
      plan_only: true
      vars:
        subnet_cidr: 10.0.1.0/24

- name: webfe-tf-destroy
  plan:
  - get: web-fe-repo
    trigger: false
    passed: [webfe-tf-plan]
  - get: webfe-tf
    trigger: true
    passed: [webfe-tf-plan]
  - put: webfe-tf
    params:
      env_name: staging
      terraform_source: web-fe-repo/terraform
      action: destroy
    get_params:
      action: destroy

########################################################################################################
#
# WRAPPER
#
########################################################################################################

- name: wrapper-tf-plan
  public: true
  serial: true
  plan:
  - get: md-mongo-wrapper-repo
  - task: check-source
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
      inputs:
      - name: md-mongo-wrapper-repo
      run:
        path: /bin/sh
        args:
        - -c
        - |
          ls -lrt
          pwd
          cd md-mongo-wrapper-repo/terraform
          pwd
          ls -lrt
          env

  - put: wrapper-tf
    params:
      env_name: staging
      terraform_source: md-mongo-wrapper-repo/terraform
      plan_only: true
      vars:
        subnet_cidr: 10.0.1.0/24

- name: wrapper-tf-destroy
  plan:
  - get: md-mongo-wrapper-repo
    trigger: false
    passed: [wrapper-tf-plan]
  - get: wrapper-tf
    trigger: true
    passed: [wrapper-tf-plan]
  - put: wrapper-tf
    params:
      env_name: staging
      terraform_source: md-mongo-wrapper-repo/terraform
      action: destroy
    get_params:
      action: destroy


########################################################################################################
#
# CPU CHECKER
#
########################################################################################################
- name: cpu-checker-tf-plan
  public: true
  serial: true
  plan:
  - get: cpu-checker-repo
  - task: check-source
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
      inputs:
      - name: cpu-checker-repo
      run:
        path: /bin/sh
        args:
        - -c
        - |
          ls -lrt
          pwd
          cd cpu-checker-repo/terraform
          pwd
          ls -lrt
          env

  - put: cpu-checker-tf
    params:
      env_name: staging
      terraform_source: cpu-checker-repo/terraform
      plan_only: true
      vars:
        subnet_cidr: 10.0.1.0/24

- name: cpu-checker-tf-destroy
  plan:
  - get: cpu-checker-repo
    trigger: false
    passed: [cpu-checker-tf-plan]
  - get: cpu-checker-tf
    trigger: true
    passed: [cpu-checker-tf-plan]
  - put: cpu-checker-tf
    params:
      env_name: staging
      terraform_source: cpu-checker-repo/terraform
      action: destroy
    get_params:
      action: destroy


########################################################################################################
#
# CPUTEMP CHECKER
#
########################################################################################################
- name: cputemp-checker-tf-plan
  public: true
  serial: true
  plan:
  - get: cputemp-checker-repo
  - task: check-source
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
      inputs:
      - name: cputemp-checker-repo
      run:
        path: /bin/sh
        args:
        - -c
        - |
          ls -lrt
          pwd
          cd cputemp-checker-repo/terraform
          pwd
          ls -lrt
          env

  - put: cputemp-checker-tf
    params:
      env_name: staging
      terraform_source: cputemp-checker-repo/terraform
      plan_only: true
      vars:
        subnet_cidr: 10.0.1.0/24

- name: cputemp-checker-tf-destroy
  plan:
  - get: cputemp-checker-repo
    trigger: false
    passed: [cputemp-checker-tf-plan]
  - get: cputemp-checker-tf
    trigger: true
    passed: [cputemp-checker-tf-plan]
  - put: cputemp-checker-tf
    params:
      env_name: staging
      terraform_source: cputemp-checker-repo/terraform
      action: destroy
    get_params:
      action: destroy


########################################################################################################
#
# MEM CHECKER
#
########################################################################################################
- name: mem-checker-tf-plan
  public: true
  serial: true
  plan:
  - get: mem-checker-repo
  - task: check-source
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
      inputs:
      - name: mem-checker-repo
      run:
        path: /bin/sh
        args:
        - -c
        - |
          ls -lrt
          pwd
          cd mem-checker-repo/terraform
          pwd
          ls -lrt
          env

  - put: mem-checker-tf
    params:
      env_name: staging
      terraform_source: mem-checker-repo/terraform
      plan_only: true
      vars:
        subnet_cidr: 10.0.1.0/24

- name: mem-checker-tf-destroy
  plan:
  - get: mem-checker-repo
    trigger: false
    passed: [mem-checker-tf-plan]
  - get: mem-checker-tf
    trigger: true
    passed: [mem-checker-tf-plan]
  - put: mem-checker-tf
    params:
      env_name: staging
      terraform_source: mem-checker-repo/terraform
      action: destroy
    get_params:
      action: destroy


########################################################################################################
#
# DISK CHECKER
#
########################################################################################################
- name: disk-checker-tf-plan
  public: true
  serial: true
  plan:
  - get: disk-checker-repo
  - task: check-source
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
      inputs:
      - name: disk-checker-repo
      run:
        path: /bin/sh
        args:
        - -c
        - |
          ls -lrt
          pwd
          cd disk-checker-repo/terraform
          pwd
          ls -lrt
          env

  - put: disk-checker-tf
    params:
      env_name: staging
      terraform_source: disk-checker-repo/terraform
      plan_only: true
      vars:
        subnet_cidr: 10.0.1.0/24

- name: disk-checker-tf-destroy
  plan:
  - get: disk-checker-repo
    trigger: false
    passed: [disk-checker-tf-plan]
  - get: disk-checker-tf
    trigger: true
    passed: [disk-checker-tf-plan]
  - put: disk-checker-tf
    params:
      env_name: staging
      terraform_source: disk-checker-repo/terraform
      action: destroy
    get_params:
      action: destroy


########################################################################################################
#
# MOTRAFFIC CHECKER
#
########################################################################################################
- name: motraffic-checker-tf-plan
  public: true
  serial: true
  plan:
  - get: motraffic-checker-repo
  - task: check-source
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
      inputs:
      - name: motraffic-checker-repo
      run:
        path: /bin/sh
        args:
        - -c
        - |
          ls -lrt
          pwd
          cd motraffic-checker-repo/terraform
          pwd
          ls -lrt
          env

  - put: motraffic-checker-tf
    params:
      env_name: staging
      terraform_source: motraffic-checker-repo/terraform
      plan_only: true
      vars:
        subnet_cidr: 10.0.1.0/24

- name: motraffic-checker-tf-destroy
  plan:
  - get: motraffic-checker-repo
    trigger: false
    passed: [motraffic-checker-tf-plan]
  - get: motraffic-checker-tf
    trigger: true
    passed: [motraffic-checker-tf-plan]
  - put: motraffic-checker-tf
    params:
      env_name: staging
      terraform_source: motraffic-checker-repo/terraform
      action: destroy
    get_params:
      action: destroy

########################################################################################################
#
# MTTRAFFIC CHECKER
#
########################################################################################################
- name: mttraffic-checker-tf-plan
  public: true
  serial: true
  plan:
  - get: mttraffic-checker-repo
  - task: check-source
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
      inputs:
      - name: mttraffic-checker-repo
      run:
        path: /bin/sh
        args:
        - -c
        - |
          ls -lrt
          pwd
          cd mttraffic-checker-repo/terraform
          pwd
          ls -lrt
          env

  - put: mttraffic-checker-tf
    params:
      env_name: staging
      terraform_source: mttraffic-checker-repo/terraform
      plan_only: true
      vars:
        subnet_cidr: 10.0.1.0/24

- name: mttraffic-checker-tf-destroy
  plan:
  - get: mttraffic-checker-repo
    trigger: false
    passed: [mttraffic-checker-tf-plan]
  - get: mttraffic-checker-tf
    trigger: true
    passed: [mttraffic-checker-tf-plan]
  - put: mttraffic-checker-tf
    params:
      env_name: staging
      terraform_source: mttraffic-checker-repo/terraform
      action: destroy
    get_params:
      action: destroy

